"use strict";(self.webpackChunkdart_frog_docs=self.webpackChunkdart_frog_docs||[]).push([[13],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9638:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:2},s="AWS App Runner \ud83c\udfc3",p={unversionedId:"deploy/aws-app-runner",id:"deploy/aws-app-runner",title:"AWS App Runner \ud83c\udfc3",description:"App Runner is a fully managed service that makes it easy for developers to quickly deploy containerized web applications and APIs, at scale and with no prior infrastructure experience required. It is service in Amazon Web Services. App Runner automatically:",source:"@site/docs/deploy/aws-app-runner.md",sourceDirName:"deploy",slug:"/deploy/aws-app-runner",permalink:"/docs/deploy/aws-app-runner",draft:!1,editUrl:"https://github.com/verygoodventures/dart_frog/tree/main/docs/docs/deploy/aws-app-runner.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Google Cloud Run \u2601\ufe0f",permalink:"/docs/deploy/google-cloud-run"},next:{title:"Roadmap \ud83d\uddfa\ufe0f",permalink:"/docs/roadmap"}},u={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Deploying",id:"deploying",level:2},{value:"Additional Resources",id:"additional-resources",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aws-app-runner-"},"AWS App Runner \ud83c\udfc3"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/apprunner/"},"App Runner")," is a fully managed service that makes it easy for developers to quickly deploy containerized web applications and APIs, at scale and with no prior infrastructure experience required. It is service in ",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/"},"Amazon Web Services"),". App Runner automatically:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Load balances traffic with encryption"),(0,o.kt)("li",{parentName:"ul"},"Scales to meet your traffic needs"),(0,o.kt)("li",{parentName:"ul"},"Makes it easy for your services to communicate with other AWS services and applications that run in a private Amazon VPC")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"Before you get started, if you haven't already completed these steps, you'll have to:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a free ",(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-creating.html"},"Amazon Web Services account"))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"While Amazon Web Services has a free tier that should cover testing projects, you can incur costs when running this quickstart through App Runner or Elastic Container Registry. For more details, see ",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/apprunner/pricing/"},"AWS App Runner Pricing")," and ",(0,o.kt)("a",{parentName:"p",href:"https://aws.amazon.com/ecr/pricing/"},"Amazon Elastic Container Registry Pricing"),".")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Install ",(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"Docker")," on your machine, and you'll have to start the app. You can verify it is set up correctly by running:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\n")),(0,o.kt)("p",null,"(If Docker is running, the command will print the images on your machine. If not, it will print something like ",(0,o.kt)("inlineCode",{parentName:"p"},"Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?"),")"),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"},"AWS CLI")," on your machine.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/cli/latest/userguide/getting-started-quickstart.html"},"Configure the AWS CLI")," to give it permission to push images. Just make sure the user you configure has the ",(0,o.kt)("inlineCode",{parentName:"p"},"AmazonEC2ContainerRegistryFullAccess")," policy applied.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Give Docker permission to push images to AWS by running:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"aws ecr get-login-password --region [REGION] | docker login --username AWS --password-stdin [AWS_ACCOUNT_ID].dkr.ecr.[REGION].amazonaws.com\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[REGION]"),": The region you want to deploy to (ex: us-west-1)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[AWS_ACCOUNT_ID]"),": The id of the account you're deploying to, without dashes (can be found in the top right menu)")),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"Create a private Elastic Container Registry (ECR) Repository. This can be done ",(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-create.html"},"in the AWS Console"),", or by running:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"aws ecr create-repository --repository-name [REPOSITORY_NAME]\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[REPOSITORY_NAME]"),": A name for the newly created repository.")),(0,o.kt)("h2",{id:"deploying"},"Deploying"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Build your API for production use by running:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dart_frog build\n")),(0,o.kt)("p",null,"This will create a /build directory with all the files needed to deploy your API."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Build your API using Docker by running:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker build build \\\n  --tag [AWS_ACCOUNT_ID].dkr.ecr.[REGION].amazonaws.com/[REPOSITORY_NAME]:[IMAGE_TAG]\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[REGION]"),": The region you want to deploy to (ex: us-west-1)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[AWS_ACCOUNT_ID]"),": The id of the account you're deploying to, without dashes (can be found in the top right menu)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[REPOSITORY_NAME]"),": The name of the repository you created eariler"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"[IMAGE_TAG]"),": A name given to this image to identify it in the repository")),(0,o.kt)("p",null,"This command will build the Docker image on your computer and can take a few seconds to a few minutes."),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Push the image to ECR by running:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker push [AWS_ACCOUNT_ID].dkr.ecr.[REGION].amazonaws.com/[REPOSITORY_NAME]:[IMAGE_TAG]\n")),(0,o.kt)("p",null,"You should now see your repository in the ",(0,o.kt)("a",{parentName:"p",href:"https://console.aws.amazon.com/ecr"},"ECR console")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create your App Runner service following ",(0,o.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/apprunner/latest/dg/manage-create.html#:~:text=Create%20a%20service%20from%20an%20Amazon%20ECR%20image"},"these instructions"),". Look for the ",(0,o.kt)("inlineCode",{parentName:"p"},"Create a service from an Amazon ECR image")," section.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Congratulations! \ud83c\udf89 You have successfully built and deployed your API to App Runner. You can now access your API at the Default domain on the ",(0,o.kt)("a",{parentName:"p",href:"https://console.aws.amazon.com/apprunner"},"App Runner console")))),(0,o.kt)("h2",{id:"additional-resources"},"Additional Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apprunner/latest/dg/what-is-apprunner.html"},"What is AWS App Runner?")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apprunner/latest/dg/manage-custom-domains.html"},"Managing custom domain names for an App Runner service")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apprunner/latest/dg/monitor-cwl.html"},"Viewing App Runner logs"))))}d.isMDXComponent=!0}}]);