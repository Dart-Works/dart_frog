"use strict";(self.webpackChunkdart_frog_docs=self.webpackChunkdart_frog_docs||[]).push([[789],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=s(t),f=o,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return t?n.createElement(m,i(i({ref:r},l),{},{components:t})):n.createElement(m,i({ref:r},l))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var d={};for(var c in r)hasOwnProperty.call(r,c)&&(d[c]=r[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8282:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return d},metadata:function(){return s},toc:function(){return u}});var n=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],d={sidebar_position:2},c="Middleware \ud83c\udf54",s={unversionedId:"basics/middleware",id:"basics/middleware",title:"Middleware \ud83c\udf54",description:"Middleware in Dart Frog allows you to execute code before and after a request is processed. You can modify the inbound request and outbound responses, provide dependencies, and more!",source:"@site/docs/basics/middleware.md",sourceDirName:"basics",slug:"/basics/middleware",permalink:"/dart_frog/docs/basics/middleware",draft:!1,editUrl:"https://github.com/verygoodventures/dart_frog/tree/main/docs/docs/basics/middleware.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Routes \ud83d\ude8f",permalink:"/dart_frog/docs/basics/routes"},next:{title:"Dependency Injection \ud83d\udc89",permalink:"/dart_frog/docs/basics/dependency-injection"}},l={},u=[],p={toc:u};function f(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"middleware-"},"Middleware \ud83c\udf54"),(0,a.kt)("p",null,"Middleware in Dart Frog allows you to execute code before and after a request is processed. You can modify the inbound request and outbound responses, provide dependencies, and more!"),(0,a.kt)("p",null,"In Dart Frog, a piece of middleware consists of a ",(0,a.kt)("inlineCode",{parentName:"p"},"middleware")," function exported from a ",(0,a.kt)("inlineCode",{parentName:"p"},"_middleware.dart")," file within a subdirectory of the ",(0,a.kt)("inlineCode",{parentName:"p"},"routes")," folder. There can only ever be one piece of middleware per route directory with ",(0,a.kt)("inlineCode",{parentName:"p"},"routes/_middleware.dart")," being middleware that is executed for all inbound requests."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:dart_frog/dart_frog.dart';\n\nHandler middleware(Handler handler) {\n  return (context) async {\n    // Execute code before request is handled.\n\n    // Forward the request to the respective handler.\n    final response = await handler(context);\n\n    // Execute code after request is handled.\n\n    // Return a response.\n    return response;\n  };\n}\n")),(0,a.kt)("p",null,"We can chain built-in middleware, such as the ",(0,a.kt)("inlineCode",{parentName:"p"},"requestLogger")," middleware via the ",(0,a.kt)("inlineCode",{parentName:"p"},"use")," API. For example, if we create ",(0,a.kt)("inlineCode",{parentName:"p"},"routes/_middleware.dart")," with the following contents, we will automatically log all requests to our server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:dart_frog/dart_frog.dart';\n\nHandler middleware(Handler handler) {\n  return handler.use(requestLogger());\n}\n")))}f.isMDXComponent=!0}}]);