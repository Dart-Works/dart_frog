"use strict";(self.webpackChunkdart_frog_docs=self.webpackChunkdart_frog_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Overview \ud83c\udfaf","href":"/dart_frog/docs/overview","docId":"overview"},{"type":"category","label":"Basics \ud83d\udcda","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Routes \ud83d\ude8f","href":"/dart_frog/docs/basics/routes","docId":"basics/routes"},{"type":"link","label":"Middleware \ud83c\udf54","href":"/dart_frog/docs/basics/middleware","docId":"basics/middleware"},{"type":"link","label":"Dependency Injection \ud83d\udc89","href":"/dart_frog/docs/basics/dependency-injection","docId":"basics/dependency-injection"},{"type":"link","label":"Testing \ud83e\uddea","href":"/dart_frog/docs/basics/testing","docId":"basics/testing"},{"type":"link","label":"Serving Static Files \ud83d\udcc1","href":"/dart_frog/docs/basics/serving-static-files","docId":"basics/serving-static-files"},{"type":"link","label":"Additional Resources \ud83d\udcda","href":"/dart_frog/docs/basics/resources","docId":"basics/resources"}],"href":"/dart_frog/docs/category/basics-"},{"type":"link","label":"Roadmap \ud83d\uddfa\ufe0f","href":"/dart_frog/docs/roadmap","docId":"roadmap"}]},"docs":{"basics/dependency-injection":{"id":"basics/dependency-injection","title":"Dependency Injection \ud83d\udc89","description":"Middleware can also be used to provide dependencies to a RequestContext via a provider.","sidebar":"docs"},"basics/middleware":{"id":"basics/middleware","title":"Middleware \ud83c\udf54","description":"Middleware in Dart Frog allows you to execute code before and after a request is processed. You can modify the inbound request and outbound responses, provide dependencies, and more!","sidebar":"docs"},"basics/resources":{"id":"basics/resources","title":"Additional Resources \ud83d\udcda","description":"- Example","sidebar":"docs"},"basics/routes":{"id":"basics/routes","title":"Routes \ud83d\ude8f","description":"In Dart Frog, a route consists of an onRequest function (called a route handler) exported from a .dart file in the routes directory. Each endpoint is associated with a routes file based on its file name. Files named, index.dart will correspond to a / endpoint.","sidebar":"docs"},"basics/serving-static-files":{"id":"basics/serving-static-files","title":"Serving Static Files \ud83d\udcc1","description":"Dart Frog supports serving static files including images, text, json, html, and more. To serve static files, place the files within the public directory at the root of the project.","sidebar":"docs"},"basics/testing":{"id":"basics/testing","title":"Testing \ud83e\uddea","description":"In Dart Frog, we can unit test our route handlers and middleware effectively because they are plain functions.","sidebar":"docs"},"overview":{"id":"overview","title":"Overview \ud83c\udfaf","description":"Dart Frog is built on top of shelf and mason and is inspired by many tools including remix.run, next.js, and express.js.","sidebar":"docs"},"roadmap":{"id":"roadmap","title":"Roadmap \ud83d\uddfa\ufe0f","description":"In the interest of transparency, we want to share high-level details of our roadmap, so that others can see our priorities and make plans based on the work we are doing.","sidebar":"docs"}}}')}}]);